import React from "react";

function Fourth() {
  return (
    <div className="item">
      <div className="item__text">
        Целью техники анализа классов эквивалентности является не только
        сокращение числа тестов, но и сохранение приемлемого тестового покрытия.
        Тестовое Покрытие - это одна из метрик оценки качества тестирования,
        представляющая собой плотность покрытия тестами требований либо
        исполняемого кода.
      </div>
      <div className="item__text">
        Мы уже говорили о том, что полное тестирование даже простой программы
        невозможно. А если и возможно, но займёт много лет.
      </div>
      <div className="item__text">
        Давайте ограничимся только операцией сложения. 2 числа по 8 знаков это
        10 в степени 16 комбинаций. Если прикинуть, что на каждый тест мы
        потратим около 10 секунд, то время полного тестирования займет у нас 10
        в степени 17 секунд, то есть больше 3 миллиардов лет непрерывных тестов.
        Поэтому одна из целей, которая стоит перед разработчиком тестов –
        сократить количество тестов, чтобы укладываться в адекватные сроки
        тестирования, но при этом не пропускать серьёзных ошибок. Как раз для
        этих целей используется техника разбиения на классы эквивалентности.
        Давайте дадим ей неформальное определение:
      </div>
      <div className="item__text">
        Это техника, которая заключается в разбиении всего набора тестов на
        классы эквивалентности с последующим сокращением числа тестов.
      </div>
      <div className="item__text">
        Техника классов эквивалентности рекомендует проведение тестов для всех
        классов эквивалентности, хотя бы по одному тесту для каждого класса.
      </div>

      <div className="item__title">Эквивалентные тесты</div>
      <div className="item__text">
        Давайте договоримся о том, какие тесты мы будем считать эквивалентными.
      </div>
      <div className="item__text">
        Два теста считаются эквивалентными, если:
      </div>
      <div className="item__subtext">
        ● Они тестируют одну и ту же вещь (функцию, модуль, часть системы).
      </div>
      <div className="item__subtext">
        ● Если один из тестов ловит ошибку, то другой скорее всего тоже её
        поймает.
      </div>
      <div className="item__subtext">
        ● Если один из них не ловит ошибку, то другой скорее всего тоже не
        поймает.
      </div>
      <div className="item__text">
        Если же мы говорим об эквивалентности входных параметров программы, то
        входные параметры, которые приводят к одинаковому поведению программы,
        мы будем считать эквивалентными.
      </div>

      <div className="item__title">Пример использования техники</div>
      <div className="item__text">
        Давайте рассмотрим пример: функцию подсчёта комиссии при отмене
        бронирования авиабилетов.
      </div>
      <div className="item__text">
        Предположим, что размер комиссии зависит от времени до вылета, когда
        совершена отмена:
      </div>
      <div className="item__subtext">
        ● За 5 суток до вылета комиссия составляет 0%;
      </div>
      <div className="item__subtext">
        ● Меньше 5 суток, но больше 24 часов – 50%;
      </div>
      <div className="item__subtext">
        ● Меньше 24 часов, но до вылета – 75%;
      </div>
      <div className="item__subtext">● После вылета – 100%.</div>

      <div className="item__title">Теперь давайте пойдём по шагам:</div>
      <div className="item__text">
        1. Определим классы эквивалентности (для каждого теста из этих классов
        мы ожидаем получить одинаковый результат):
      </div>
      <div className="item__subtext">● 1 класс: время до вылета> 5 суток;</div>
      <div className="item__subtext">{`● 2 класс: 24 часа <время до вылета <5 суток;`}</div>
      <div className="item__subtext">{`● 3 класс: 0 часов <время до вылета <24 часа;`}</div>
      <div className="item__subtext">{`● 4 класс: время до вылета <0 часов (вылет уже состоялся).`}</div>
      <div className="item__text">
        2. Выберем представителя от каждого класса. Здесь мы можем поступить,
        как нам хочется, и выбрать любые значения из класса. Ведь, если
        предположить, что мы правильно разбили на классы эквивалентности, то нет
        разницы, какое значение из диапазона мы выберем.
      </div>
      <div className="item__subtext">
        ● время до вылета = 10 суток (тест из 1-го класса);
      </div>
      <div className="item__subtext">
        ● время до вылета = 3 суток (тест из 2-го класса);
      </div>
      <div className="item__subtext">
        ● время до вылета = 12 часов (тест из 3-го класса);
      </div>
      <div className="item__subtext">
        ● время до вылета = -30 мин (тест из 4-го класса).
      </div>
      <div className="item__text">3. Выполним тесты:</div>
      <div className="item__subtext">
        ● Отменим бронь за 10 суток до вылета и проверим, что комиссия составила
        0%.
      </div>
      <div className="item__subtext">
        ● Отменим бронь за 3 суток до вылета и проверим, что комиссия составила
        50%.
      </div>
      <div className="item__subtext">
        ● Отменим бронь за 12 часов до вылета и проверим, что комиссия составила
        75%.
      </div>
      <div className="item__subtext">
        ● Отменим бронь через 30 мин после вылета и проверим, что комиссия
        составила 100%.
      </div>

      <div className="item__title">Техника анализа граничных значений</div>
      <div className="item__text">Определение</div>
      <div className="item__text">
        Давайте рассмотрим вторую технику - анализ граничных значений. Это
        техника проверки ошибок на границах классов эквивалентности.
      </div>
      <div className="item__text">
        Если техника анализа классов эквивалентности ориентирована на тестовое
        покрытие, то эта техника основана на рисках. Эта техника начинается с
        идеи о том, что программа может сломаться в области граничных значений.
      </div>
      <div className="item__text">
        А почему считается, что с граничными значениями связаны серьёзные риски?
      </div>
      <div className="item__subtext">
        ● Давно замечено, что при разработке большое число проблем возникает на
        границах входных переменных.
      </div>
      <div className="item__subtext">
        ● Даже если эквивалентные классы найдены правильно, то граничные
        значения могут быть ошибочно отнесены к другому классу.
      </div>
      <div className="item__text">
        Эта техника на первый взгляд простая. Но это впечатление не должно
        вводить нас в заблуждение: эффективное применение этой техники зависит
        от способности правильно выделить классы эквивалентности и затем выбрать
        тесты для проверки границ этих классов.
      </div>
      <div className="item__text">
        Цель этой техники сформулировать несложно - найти ошибки, связанные с
        граничными значениями.
      </div>
      <div className="item__text">
        Примерный алгоритм использования техники анализа граничных значений:
      </div>
      <div className="item__subtext">
        1. Выделить классы эквивалентности. Опять же, это очень важный шаг, и от
        правильности разбиения на классы эквивалентности зависит эффективность
        тестов граничных значений.
      </div>
      <div className="item__subtext">
        2. Далее нужно определить граничные значения этих классов.
      </div>
      <div className="item__subtext">
        3. Определить, к какому классу будет относиться каждая граница.
      </div>
      <div className="item__subtext">
        4. Для каждой границы нам нужно провести тесты по проверке значения до
        границы, на границе, и сразу после границы.
      </div>

      <div className="item__title">Пример использования</div>
      <div className="item__text">
        Давайте теперь вернёмся к нашему примеру с бронированием и проведем
        тестирование граничных значений.
      </div>
      <div className="item__text">Пойдем по шагам:</div>
      <div className="item__text">1. Выделим классы эквивалентности:</div>
      <div className="item__subtext">● время до вылета> 5 суток;</div>
      <div className="item__subtext">{`● 24 часа = <время до вылета =<5 суток;`}</div>
      <div className="item__subtext">{`● 0 часов <время до вылета <24 часа;`}</div>
      <div className="item__subtext">{`● время до вылета = <0 часов (вылет уже состоялся).`}</div>
      <div className="item__text">2. Определим границы:</div>
      <div className="item__subtext">● 5 суток;</div>
      <div className="item__subtext">● 24 часа;</div>
      <div className="item__subtext">● 0 часов.</div>
      <div className="item__text">
        3. Определим, к какому классу относятся границы:
      </div>
      <div className="item__subtext">● 5 суток – к 2-му классу;</div>
      <div className="item__subtext">● 24 часа – к 3-му классу;</div>
      <div className="item__subtext">● 0 часов – к 4-му классу.</div>
      <div className="item__text">
        4. Протестируем значения на границах, до и после них:
      </div>
      <div className="item__subtext">
        ● Отменим бронь за 5 суток + 1 секунду до вылета (или просто постараемся
        выполнить бронь как можно ближе к границе, но слева от неё) и проверим,
        что комиссия равна 0%.
      </div>
      <div className="item__subtext">
        ● Отменим бронь ровно за 5 суток до вылета и проверим, что комиссия
        равна 50%.
      </div>
      <div className="item__subtext">
        ● Отменим бронь за 5 суток – 1 секунду до вылета и проверим, что
        комиссия равна 50%.
      </div>
      <div className="item__subtext">
        ● Отменим бронь за 24 часа + 1 секунду до вылета и проверим, что
        комиссия равна 50%.
      </div>
      <div className="item__subtext">
        ● Отменим бронь ровно за 24 часа до вылета и проверим, что комиссия
        равна 75%.
      </div>
      <div className="item__subtext">
        ● Отменим бронь за 24 часа - 1 секунду до вылета и проверим, что
        комиссия равна 75%.
      </div>
      <div className="item__subtext">
        ● Отменим бронь за 1 секунду до вылета и проверим, что комиссия равна
        75%.
      </div>
      <div className="item__subtext">
        ● Отменим бронь ровно во время вылета и проверим, что комиссия равна
        100%.
      </div>
      <div className="item__subtext">
        ● Отменим бронь спустя 1 секунду после вылета и проверим, что комиссия
        равна 100%
      </div>

      <div className="item__title">Домашнее задание</div>
      <div className="item__text">
        1. Система распределяет клиентов по категориям:
      </div>
      <div className="item__subtext">- дети (до 18 лет не включительно);</div>
      <div className="item__subtext">
        - взрослый (с 18 до 55 (не включ) лет для женщин, с 18 до 60 (не включ)
        лет для мужчин);
      </div>
      <div className="item__subtext">
        - пенсионер (с 55 лет для женщин, с 60 лет для мужчин).
      </div>
      <div className="item__text">
        Системе подают на вход данные: возраст и пол. Какие проверки нужно
        выполнить? Выделите классы эквивалентности и граничные значения.
      </div>
      <div className="item__text">
        2. В поле ввода года рождения можно ввести значения между 1900 и 2017.
        Определить граничные значения для тестирования этой области. Выделить
        классы эквивалентности.
      </div>
    </div>
  );
}

export default Fourth;
